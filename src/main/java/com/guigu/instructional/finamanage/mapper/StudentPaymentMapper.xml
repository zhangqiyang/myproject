<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.guigu.instructional.finamanage.mapper.StudentPaymentMapper" >
  <resultMap id="BaseResultMap" type="com.guigu.instructional.po.StudentPayment" >
    <id column="payment_id" property="paymentId" jdbcType="INTEGER" />
    <result column="student_id" property="studentId" jdbcType="INTEGER" />
    <result column="staff_id" property="staffId" jdbcType="INTEGER" />
    <result column="payment_situtation" property="paymentSitutation" jdbcType="VARCHAR" />
    <result column="payment_menthod" property="paymentMenthod" jdbcType="INTEGER" />
    <result column="payment_time" property="paymentTime" jdbcType="TIMESTAMP" />
    <result column="payment_discount_amount" property="paymentDiscountAmount" jdbcType="DOUBLE" />
    <result column="payment_should_amount" property="paymentShouldAmount" jdbcType="DOUBLE" />
    <result column="payment_real_amount" property="paymentRealAmount" jdbcType="DOUBLE" />
    <result column="payment_debt_amount" property="paymentDebtAmount" jdbcType="DOUBLE" />
    <result column="payment_remark" property="paymentRemark" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    payment_id, student_id, staff_id, payment_situtation, payment_menthod, payment_time, 
    payment_discount_amount, payment_should_amount, payment_real_amount, payment_debt_amount, 
    payment_remark
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.guigu.instructional.po.StudentPaymentExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from student_payment
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from student_payment
    where payment_id = #{paymentId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from student_payment
    where payment_id = #{paymentId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.guigu.instructional.po.StudentPaymentExample" >
    delete from student_payment
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.guigu.instructional.po.StudentPayment" >
    insert into student_payment (payment_id, student_id, staff_id, 
      payment_situtation, payment_menthod, payment_time, 
      payment_discount_amount, payment_should_amount, 
      payment_real_amount, payment_debt_amount, payment_remark
      )
    values (#{paymentId,jdbcType=INTEGER}, #{studentId,jdbcType=INTEGER}, #{staffId,jdbcType=INTEGER}, 
      #{paymentSitutation,jdbcType=VARCHAR}, #{paymentMenthod,jdbcType=INTEGER}, #{paymentTime,jdbcType=TIMESTAMP}, 
      #{paymentDiscountAmount,jdbcType=DOUBLE}, #{paymentShouldAmount,jdbcType=DOUBLE}, 
      #{paymentRealAmount,jdbcType=DOUBLE}, #{paymentDebtAmount,jdbcType=DOUBLE}, #{paymentRemark,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.guigu.instructional.po.StudentPayment" >
    insert into student_payment
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="paymentId != null" >
        payment_id,
      </if>
      <if test="studentId != null" >
        student_id,
      </if>
      <if test="staffId != null" >
        staff_id,
      </if>
      <if test="paymentSitutation != null" >
        payment_situtation,
      </if>
      <if test="paymentMenthod != null" >
        payment_menthod,
      </if>
      <if test="paymentTime != null" >
        payment_time,
      </if>
      <if test="paymentDiscountAmount != null" >
        payment_discount_amount,
      </if>
      <if test="paymentShouldAmount != null" >
        payment_should_amount,
      </if>
      <if test="paymentRealAmount != null" >
        payment_real_amount,
      </if>
      <if test="paymentDebtAmount != null" >
        payment_debt_amount,
      </if>
      <if test="paymentRemark != null" >
        payment_remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="paymentId != null" >
        #{paymentId,jdbcType=INTEGER},
      </if>
      <if test="studentId != null" >
        #{studentId,jdbcType=INTEGER},
      </if>
      <if test="staffId != null" >
        #{staffId,jdbcType=INTEGER},
      </if>
      <if test="paymentSitutation != null" >
        #{paymentSitutation,jdbcType=VARCHAR},
      </if>
      <if test="paymentMenthod != null" >
        #{paymentMenthod,jdbcType=INTEGER},
      </if>
      <if test="paymentTime != null" >
        #{paymentTime,jdbcType=TIMESTAMP},
      </if>
      <if test="paymentDiscountAmount != null" >
        #{paymentDiscountAmount,jdbcType=DOUBLE},
      </if>
      <if test="paymentShouldAmount != null" >
        #{paymentShouldAmount,jdbcType=DOUBLE},
      </if>
      <if test="paymentRealAmount != null" >
        #{paymentRealAmount,jdbcType=DOUBLE},
      </if>
      <if test="paymentDebtAmount != null" >
        #{paymentDebtAmount,jdbcType=DOUBLE},
      </if>
      <if test="paymentRemark != null" >
        #{paymentRemark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.guigu.instructional.po.StudentPaymentExample" resultType="java.lang.Integer" >
    select count(*) from student_payment
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update student_payment
    <set >
      <if test="record.paymentId != null" >
        payment_id = #{record.paymentId,jdbcType=INTEGER},
      </if>
      <if test="record.studentId != null" >
        student_id = #{record.studentId,jdbcType=INTEGER},
      </if>
      <if test="record.staffId != null" >
        staff_id = #{record.staffId,jdbcType=INTEGER},
      </if>
      <if test="record.paymentSitutation != null" >
        payment_situtation = #{record.paymentSitutation,jdbcType=VARCHAR},
      </if>
      <if test="record.paymentMenthod != null" >
        payment_menthod = #{record.paymentMenthod,jdbcType=INTEGER},
      </if>
      <if test="record.paymentTime != null" >
        payment_time = #{record.paymentTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.paymentDiscountAmount != null" >
        payment_discount_amount = #{record.paymentDiscountAmount,jdbcType=DOUBLE},
      </if>
      <if test="record.paymentShouldAmount != null" >
        payment_should_amount = #{record.paymentShouldAmount,jdbcType=DOUBLE},
      </if>
      <if test="record.paymentRealAmount != null" >
        payment_real_amount = #{record.paymentRealAmount,jdbcType=DOUBLE},
      </if>
      <if test="record.paymentDebtAmount != null" >
        payment_debt_amount = #{record.paymentDebtAmount,jdbcType=DOUBLE},
      </if>
      <if test="record.paymentRemark != null" >
        payment_remark = #{record.paymentRemark,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update student_payment
    set payment_id = #{record.paymentId,jdbcType=INTEGER},
      student_id = #{record.studentId,jdbcType=INTEGER},
      staff_id = #{record.staffId,jdbcType=INTEGER},
      payment_situtation = #{record.paymentSitutation,jdbcType=VARCHAR},
      payment_menthod = #{record.paymentMenthod,jdbcType=INTEGER},
      payment_time = #{record.paymentTime,jdbcType=TIMESTAMP},
      payment_discount_amount = #{record.paymentDiscountAmount,jdbcType=DOUBLE},
      payment_should_amount = #{record.paymentShouldAmount,jdbcType=DOUBLE},
      payment_real_amount = #{record.paymentRealAmount,jdbcType=DOUBLE},
      payment_debt_amount = #{record.paymentDebtAmount,jdbcType=DOUBLE},
      payment_remark = #{record.paymentRemark,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.guigu.instructional.po.StudentPayment" >
    update student_payment
    <set >
      <if test="studentId != null" >
        student_id = #{studentId,jdbcType=INTEGER},
      </if>
      <if test="staffId != null" >
        staff_id = #{staffId,jdbcType=INTEGER},
      </if>
      <if test="paymentSitutation != null" >
        payment_situtation = #{paymentSitutation,jdbcType=VARCHAR},
      </if>
      <if test="paymentMenthod != null" >
        payment_menthod = #{paymentMenthod,jdbcType=INTEGER},
      </if>
      <if test="paymentTime != null" >
        payment_time = #{paymentTime,jdbcType=TIMESTAMP},
      </if>
      <if test="paymentDiscountAmount != null" >
        payment_discount_amount = #{paymentDiscountAmount,jdbcType=DOUBLE},
      </if>
      <if test="paymentShouldAmount != null" >
        payment_should_amount = #{paymentShouldAmount,jdbcType=DOUBLE},
      </if>
      <if test="paymentRealAmount != null" >
        payment_real_amount = #{paymentRealAmount,jdbcType=DOUBLE},
      </if>
      <if test="paymentDebtAmount != null" >
        payment_debt_amount = #{paymentDebtAmount,jdbcType=DOUBLE},
      </if>
      <if test="paymentRemark != null" >
        payment_remark = #{paymentRemark,jdbcType=VARCHAR},
      </if>
    </set>
    where payment_id = #{paymentId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.guigu.instructional.po.StudentPayment" >
    update student_payment
    set student_id = #{studentId,jdbcType=INTEGER},
      staff_id = #{staffId,jdbcType=INTEGER},
      payment_situtation = #{paymentSitutation,jdbcType=VARCHAR},
      payment_menthod = #{paymentMenthod,jdbcType=INTEGER},
      payment_time = #{paymentTime,jdbcType=TIMESTAMP},
      payment_discount_amount = #{paymentDiscountAmount,jdbcType=DOUBLE},
      payment_should_amount = #{paymentShouldAmount,jdbcType=DOUBLE},
      payment_real_amount = #{paymentRealAmount,jdbcType=DOUBLE},
      payment_debt_amount = #{paymentDebtAmount,jdbcType=DOUBLE},
      payment_remark = #{paymentRemark,jdbcType=VARCHAR}
    where payment_id = #{paymentId,jdbcType=INTEGER}
  </update>
</mapper>